// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SyncData.TableCreation.syncMasterServerConfigTable;

#nullable disable

namespace SyncData.Migrations
{
    [DbContext(typeof(syncMasterPublisherContext))]
    partial class syncMasterPublisherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SyncData.TableCreation.syncMasterPublisherModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Alias");

                    b.Property<string>("AllowedServers")
                        .HasColumnType("ntext")
                        .HasColumnName("AllowedServers");

                    b.Property<string>("BaseUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BaseUrl");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Icon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("icon-planet color-blue-grey")
                        .HasColumnName("Icon");

                    b.Property<Guid?>("Key")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Key");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Message");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Publisher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("realtime")
                        .HasColumnName("Publisher");

                    b.Property<string>("PublisherSettings")
                        .HasColumnType("ntext")
                        .HasColumnName("PublisherSettings");

                    b.Property<bool?>("PullEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("PullEnabled");

                    b.Property<bool?>("PushEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("PushEnabled");

                    b.Property<string>("SendSettings")
                        .HasColumnType("ntext")
                        .HasColumnName("SendSettings");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.HasKey("Id");

                    b.ToTable("syncMasterPublisherServerConfig", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
